module Two_cap_prob = 

let LOWERCASE
  : regexp =
  "a"
    | "b"
    | "c"
    | "d"
    | "e"
    | "f"
    | "g"
    | "h"
    | "i"
    | "j"
    | "k"
    | "l"
    | "m"
    | "n"
    | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" 

let UPPERCASE
  : regexp =
  "A"
    | "B"
    | "C"
    | "D"
    | "E"
    | "F"
    | "G"
    | "H"
    | "I"
    | "J"
    | "K"
    | "L"
    | "M"
    | "N"
    | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" 

let DIGIT
  : regexp =
  "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" 

let WSP : regexp = (" " | "\n" | "\t") . (" " | "\n" | "\t")*  

let NAME : regexp = LOWERCASE . LOWERCASE*  

let UPPERCASENAME : regexp = UPPERCASE . UPPERCASE*  

let LASTCOMMAFIRST : regexp = UPPERCASENAME . ", " . UPPERCASENAME 

let FIRSTTHENLAST : regexp = NAME . " " . NAME

let capitalize = synth LASTCOMMAFIRST <=> FIRSTTHENLAST with #{string * string}[]