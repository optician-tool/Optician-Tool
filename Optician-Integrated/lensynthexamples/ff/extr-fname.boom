module Extr-fname = 

let LOWERCASE
  : regexp =
  "a"
    | "b"
    | "c"
    | "d"
    | "e"
    | "f"
    | "g"
    | "h"
    | "i"
    | "j"
    | "k"
    | "l"
    | "m"
    | "n"
    | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" 

let UPPERCASE
  : regexp =
  "A"
    | "B"
    | "C"
    | "D"
    | "E"
    | "F"
    | "G"
    | "H"
    | "I"
    | "J"
    | "K"
    | "L"
    | "M"
    | "N"
    | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" 

let DIGIT
  : regexp =
  "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" 

let CHARACTER : regexp = LOWERCASE | UPPERCASE 

let WSP : regexp = (" " | "\n" | "\t") . (" " | "\n" | "\t")*  

let NUMBER : regexp = DIGIT . DIGIT*  

let TEXT : regexp = (CHARACTER | " ")*  

let NONEMPTYTEXT : regexp = (CHARACTER | " ") . (CHARACTER | " ")*  

let NUMERICTEXT : regexp = (CHARACTER | " " | DIGIT)*  

let LOCALFOLDER
  : regexp =
  (LOWERCASE | UPPERCASE | "_" | "." | "-")
    . (LOWERCASE | UPPERCASE | "_" | "." | "-")*  

test matches_cex LOCALFOLDER "extract-filename.txt" = true

let DIRECTORY : regexp = ("/" | "") . (LOCALFOLDER . "/")*  

let GLOBALFOLDER : regexp = DIRECTORY . LOCALFOLDER 

let FOLDER : regexp = (LOCALFOLDER . "/")*  . LOCALFOLDER . ("" | "/") 

test matches_cex
  DIRECTORY
  "Users/amiltner/lens/tests/flashfill/extract-filename.txt/" = true

let FILEANDFOLDER
  : regexp =
  "file: " . LOCALFOLDER . "\nfolder: " . DIRECTORY
    | "empty directory given" | "root directory given" 

test matches_cex
  FILEANDFOLDER
  "file: extract-filename.txt\nfolder: Users/amiltner/lens/tests/flashfill/" = true

let extract_file = synth DIRECTORY <=> FILEANDFOLDER with
#{string * string}[
"Users/amiltner/lens/tests/flashfill/extract-filename.txt/",
"file: extract-filename.txt\nfolder: Users/amiltner/lens/tests/flashfill/";
"/", "root directory given"]
 
 